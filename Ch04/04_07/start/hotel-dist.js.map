{"version":3,"sources":["hotel.js"],"names":["CONFIG","apiUrl","PostForm","props","typeOptions","Object","keys","messageTypes","map","key","hasOwnProperty","defaultType","React","useState","messageText","setMessageText","messageType","setMessageType","onTextChange","evt","target","value","onTypeChange","postStatusUpdate","preventDefault","newStatus","msg","type","time","date","format","Date","axios","post","then","response","console","log","data","success","StatusMessage","statusDate","parse","dateFormat","StatusMessageList","statuses","setStatuses","loaded","setLoaded","useEffect","retrieveStatusMessages","get","displayStatusMessages","status","id","StatusMessageManager","management","dining","ops","plumbing","pool","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["(function() {\n  \"use strict\";\n\n  var CONFIG = {\n    apiUrl: \"http://localhost/reactjs/status_api\"\n  };\n\n  function PostForm(props) {\n    var typeOptions = Object.keys(props.messageTypes).map(function(key) {\n      if (props.messageTypes.hasOwnProperty(key)) {\n        return (\n          <option key={key} value={key}>\n            {props.messageTypes[key]}\n          </option>\n        );\n      }\n    });\n\n    // so we don't have to type this over and over\n    var defaultType = typeOptions[0].key;\n\n    var [messageText, setMessageText] = React.useState(\"\");\n    var [messageType, setMessageType] = React.useState(defaultType);\n\n    function onTextChange(evt) {\n      setMessageText(evt.target.value);\n    }\n\n    function onTypeChange(evt) {\n      setMessageType(evt.target.value);\n    }\n\n    function postStatusUpdate(evt) {\n      evt.preventDefault();\n\n      var newStatus = {\n        msg: messageText,\n        type: messageType,\n        time: date.format(new Date(), \"YYYY-MM-DD, HH:mm\")\n      };\n\n      axios.post(CONFIG.apiUrl + \"/post.php\", newStatus).then(function(response) {\n        console.log(response);\n\n        if (response.data.success) {\n          // Update state (list of messages)\n        }\n      });\n    }\n\n    return (\n      <form onSubmit={postStatusUpdate}>\n        <h3>Post an Update</h3>\n\n        <div className=\"field-group\">\n          <label htmlFor=\"txt-message\">Message</label>\n          <textarea\n            id=\"txt-message\"\n            rows=\"2\"\n            onChange={onTextChange}\n            value={messageText}\n          />\n        </div>\n\n        <div className=\"field-group\">\n          <label htmlFor=\"txt-type\">Type</label>\n          <select id=\"txt-type\" onChange={onTypeChange} value={messageType}>\n            {typeOptions}\n          </select>\n        </div>\n\n        <div className=\"field-group action\">\n          <input type=\"submit\" value=\"Post Update\" />\n        </div>\n      </form>\n    );\n  }\n\n  function StatusMessage(props) {\n    var statusDate = date.parse(props.time, \"YYYY-MM-DD, HH:mm\"),\n      dateFormat = \"M/D/Y, h:mm A\";\n\n    return (\n      <div className=\"status-message\">\n        {props.msg}\n        <span className=\"name\">— {props.type}</span>\n        <span className=\"time\">{date.format(statusDate, dateFormat)}</span>\n      </div>\n    );\n  }\n\n  function StatusMessageList(props) {\n    var [statuses, setStatuses] = React.useState([]);\n    var [loaded, setLoaded] = React.useState(false);\n\n    React.useEffect(function() {\n      retrieveStatusMessages();\n    }, []);\n\n    function retrieveStatusMessages() {\n      axios.get(CONFIG.apiUrl + \"/get.php?delay=5\").then(function(response) {\n        setStatuses(response.data);\n        setLoaded(true);\n      });\n    }\n\n    function displayStatusMessages() {\n      return statuses.map(function(status) {\n        return (\n          <li key={status.id}>\n            <StatusMessage\n              msg={status.msg}\n              type={props.messageTypes[status.type]}\n              time={status.time}\n            />\n          </li>\n        );\n      });\n    }\n\n    if (loaded) {\n      return <ul id=\"status-list\">{displayStatusMessages()}</ul>;\n    } else {\n      return (\n        <div id=\"status-list\" className=\"loading\">\n          Loading...\n          <div className=\"spinner\">\n            <div className=\"bounce1\" />\n            <div className=\"bounce2\" />\n            <div className=\"bounce3\" />\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function StatusMessageManager(props) {\n    var messageTypes = {\n      management: \"Management\",\n      dining: \"Dining Services\",\n      ops: \"Operations\",\n      plumbing: \"Plumbing\",\n      pool: \"Pool\"\n    };\n\n    return (\n      <React.Fragment>\n        <div id=\"post-status\">\n          <PostForm messageTypes={messageTypes} />\n        </div>\n        <StatusMessageList messageTypes={messageTypes} />\n      </React.Fragment>\n    );\n  }\n\n  ReactDOM.render(\n    <StatusMessageManager />,\n    document.getElementById(\"react-statusmanager\")\n  );\n})();\n"]}